---


- hosts: neutron_servers
  # gather_facts: False
  vars:
    - timestamp: "{{ansible_date_time.iso8601_basic}}"
  remote_user: root
  tasks:
    # ping neutron_servers
    - name: check host reachable
      ping:

    # check neutron and neutron_lbaas installed.
    - name: neutron installed
      yum:
        name: 
          - python-neutron.noarch
          - python-neutron-lbaas.noarch

    - name: uninstall legacy f5-*
      yum:
        name:
          - f5-openstack-agent.noarch
          - f5-openstack-lbaasv2-driver.noarch
          - f5-icontrol-rest.noarch
          - f5-sdk.noarch
        state: removed

    - name: download f5-sdk {{ vers_f5sdk }}
      get_url:
        # url: https://github.com/F5Networks/f5-common-python/releases/download/v{{ vers_f5sdk }}/f5-sdk-{{ vers_f5sdk }}-1.el7.noarch.rpm
        url: http://10.250.11.185/f5-packages/f5-sdk-{{ vers_f5sdk }}-1.el7.noarch.rpm
        dest: /tmp
        timeout: 30

    - name: download f5-icontrol {{ vers_icontrol }}
      get_url:
        # url: https://github.com/F5Networks/f5-icontrol-rest-python/releases/download/v{{ vers_icontrol }}/f5-icontrol-rest-{{ vers_icontrol }}-1.el7.noarch.rpm
        url: http://10.250.11.185/f5-packages/f5-icontrol-rest-{{ vers_icontrol }}-1.el7.noarch.rpm
        dest: /tmp
        timeout: 30

    - name: download f5-driver {{ vers_driver }}
      get_url:
        # url: https://github.com/F5Networks/f5-openstack-lbaasv2-driver/releases/download/v{{ vers_driver }}/f5-openstack-lbaasv2-driver-{{ vers_driver }}-1.el7.noarch.rpm
        url: http://10.250.11.185/f5-packages/f5-openstack-lbaasv2-driver-{{ vers_driver }}-1.el7.noarch.rpm
        dest: /tmp
        timeout: 30

    - name: download f5-agent {{vers_agent}}
      get_url:
        # url: https://github.com/F5Networks/f5-openstack-agent/releases/download/v{{ vers_agent }}/f5-openstack-agent-{{ vers_agent }}-1.el7.noarch.rpm
        url: http://10.250.11.185/f5-packages/f5-openstack-agent-{{ vers_agent }}-1.el7.noarch.rpm
        dest: /tmp
        timeout: 30

    - name: install f5-*
      shell: |
        rpm -ivh \
          f5-sdk-{{ vers_f5sdk }}-1.el7.noarch.rpm \
          f5-icontrol-rest-{{ vers_icontrol }}-1.el7.noarch.rpm \
          f5-openstack-lbaasv2-driver-{{ vers_driver }}-1.el7.noarch.rpm \
          f5-openstack-agent-{{ vers_agent }}-1.el7.noarch.rpm
      args:
        chdir: /tmp
        removes: f5-openstack-agent-{{ vers_agent }}-1.el7.noarch.rpm
        warn: False

    - name: install configparser
      pip:
        name: configparser
      
    - name: copy {{ openrc }} to rdo host
      copy:
        src: "{{ openrc }}"
        dest: /tmp/openrc
        force: yes

    - name: copy /root/f5-oslbaasv2-systest/_config-ini-conf.py to rdo host
      copy:
        src: /root/f5-oslbaasv2-systest/_config-ini-conf.py
        dest: /tmp/_config-ini-conf.py
        force: yes

    - name: configure neutron_lbaas and f5-agent
      shell: |
        export bigip_admin_password={{bigip_admin_password}} && \
        export bigip_hostname={{bigip_hostname}} && \
        source /tmp/openrc && \
        python /tmp/_config-ini-conf.py
      # notify:
      #   - restart neutron-server
      #   - restart f5-openstack-agent

    - name: restart neutron-server
      service:
        name: neutron-server
        state: restarted
    - name: restart f5-openstack-agent
      service:
        name: f5-openstack-agent
        state: restarted

    - name: create loadbalancer test
      shell: |
        source /tmp/openrc && \
        neutron lbaas-loadbalancer-create --name lb-{{timestamp}} public_subnet
      # notify:
      #   - check lb created with no ERROR

  handlers:
    # - name: restart neutron-server
    #   service:
    #     name: neutron-server
    #     state: restarted
    # - name: restart f5-openstack-agent
    #   service:
    #     name: f5-openstack-agent
    #     state: restarted
    # - name: check lb created with no ERROR
    #   script: |
    #     source /tmp/openrc
    #     while true; do
    #       sleep 1
    #       status=`neutron lbaas-loadbalancer-show lb-{{timestamp}} --format value --column provisioning_status`
    #       echo $status | grep "PENDING_" && continue
    #       echo $status | grep "ERROR" && exit 1
    #       echo $status && exit 0
    #     done

# initialize neutron servers
# delete all objects in db
# delete all port allocation


# do tests.
