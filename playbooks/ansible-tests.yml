---

- hosts: bigips
  gather_facts: False
  remote_user: root
  vars_files: ../conf.d/vars.yml
  tasks:
    - debug: msg="{{ item }}"
      with_items: 
        - "groups={{groups}}"
        - "group_names={{group_names}}"
        - "hostvars={{hostvars}}"
        - "inventory_hostname={{inventory_hostname}}"
        - "inventory_hostname_short={{inventory_hostname_short}}"
        - "play_hosts={{play_hosts}}"
        - "inventory_dir={{inventory_dir}}"
        - "password: {{hostvars[groups['bigips'][0]].admin_password}}"
        - "hosts: {{groups['bigips'] | join(',')}}"
      run_once: True
    # - name: purposely fail
    #   shell: echo zongzw
    #   register: task_register_var
    #   until: task_register_var.stdout == 'zongzw'
    #   retries: 2
    #   delay: 1
    #   ignore_errors: yes

    # - name: debug task_register_var
    #   debug:
    #     msg: "{{ task_register_var }}"

    # - name: get  neutron  db infor
    #   shell: cat  ~/test.json
    #   register:  vara
    #   delegate_to: localhost
    
    # - debug: var=vara
  # - name: set timestamp value
  #   shell: date +%s
  #   register: timestamp
  # - debug: var=timestamp.stdout

  # - name: collect bigip device info
  #   bigip_device_info:
  #     gather_subset:
  #       - system-info
  #       - partitions
  #       # - provision-info
  #       # - interfaces
  #       # - client-ssl-profiles
  #       # - ltm-pools
  #       # - virtual-servers
  #       # - vlans
  #       # - nodes
  #       # - virtual-addresses
  #       # - profiles
  #       - devices
  #       - http-profiles
  #     provider:
  #       user: admin
  #       server: "{{ bigip.hostname }}"
  #       password: "{{ bigip.admin_password }}"
  #       validate_certs: False
  #   register: testvar

  # - name: show bigip infor {{testvar.devices.name}}
  #   debug:
  #     var: testvar

  # - name: test shell
  #   shell: "echo test > /var/testshellfile"
  #   register: testvar
  # - name: bigip module return values
  #   debug:
  #     # var: testvar

  # - debug: msg="{{ item }}"
  #   with_items:
  #     - one
  #     - two
  #   register: res
  # - name: bigip module return values
  #   debug:
  #     var: res